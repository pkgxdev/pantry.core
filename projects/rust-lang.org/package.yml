distributable:
  url: https://static.rust-lang.org/dist/rustc-{{ version }}-src.tar.gz
  strip-components: 1

versions:
  github: rust-lang/rust
  strip: /^Rust /

# TODO we should disable rust-up etc. if you want that, install rust with rust-up!

provides:
  - bin/cargo-clippy
  - bin/cargo-fmt
  - bin/clippy-driver
  - bin/rls
  - bin/rust-analyzer
  - bin/rust-gdb
  - bin/rust-gdbgui
  - bin/rust-lldb
  - bin/rustc
  - bin/rustdoc
  - bin/rustfmt

# FIXME: unused?
options:
  - rls
  - clippy
  - rustfmt
  - analysis
  - { name: rust-demangler, default: false }

dependencies:
  #FIXME strictly rustc only needs a linker
  tea.xyz/gx/cc: c99
  zlib.net: 1

build:
  dependencies:
    tea.xyz/gx/make: '*'  #FIXME surely we donâ€™t need make AND ninja
    cmake.org: ^3.20
    ninja-build.org: ^1.10
    python.org: 3
    openssl.org: '*' # needed to build openssl-sys
    freedesktop.org/pkg-config: ^0.29
  script: |-
    # --enable-optimize not available as of 1.63.0
    if test {{version.major}} -eq 1 -a {{version.minor}} -lt 63; then
      export ARGS="$ARGS --enable-optimize"
    fi

    ./configure $ARGS
    make install

    for tool in $tools; do
      ./x.py install $tool
    done

    rm -rf {{prefix}}/share/doc
  env:
    ARGS:
      - --enable-vendor
      - --prefix={{ prefix }}
      - --enable-ninja
      - --disable-docs  # docs are online
      - --tools=rls,clippy,rustfmt,analysis
    tools:
      - rls       # deprecated for rust-analyzer some time ago -- remove eventually
      - clippy
      - rustfmt
      - rust-analyzer

test:
  script: |
    rustc $FIXTURE -o hello
    ./hello
  fixture: |
    fn main() {
      println!("Hello World!");
    }