name: Cache Brewkit
description: sets up tea.xyz/brewkit with caching

inputs:
  cache-prefix:
    description: >
      The prefix for the cache key.
      Should be step name (or similar).
    required: true
# Inputs and outputs are `teaxyz/setup` passthrough
  prefix:
    description: >
      Where tea stows its packages.
      Defaults to `$HOME/.tea`.
    required: false
  version:
    description: >
      The version of teaxyz/cli to install.
      Defaults to the most recent published version.
    required: false
  chaste:
    description: >
      Do not install packages.
      Defaults to `false`.
    default: "false"
  packages:
    description: |
      Whitespace separated, pkgs to supplement the environment. eg.

      ```yaml
      +: |
        deno.land^1.30
        rust-lang.org^1.60
      ```

      By default tea reads your developer environment and adds those packages.
      Specifying additional packages here is a way to augment that.
    required: false
  srcroot:
    description: |
      Override detection of the developer-environment’s `$SRCROOT`.

      Set to `null` to disable the developer-environment.
    default: .
    required: false
outputs:
  version:
    description: Your project’s version.
    value: ${{ steps.tea.outputs.version }}
  prefix:
    description: The prefix you specified.
    value: ${{ steps.tea.outputs.prefix }}

runs:
  using: composite
  steps:
    - run: |
        if [[ "$RUNNER_OS" == "macOS" ]]; then
          echo "cache=~/Library/Caches/deno" >> $GITHUB_OUTPUT
        else
          echo "cache=~/.cache/deno" >> $GITHUB_OUTPUT
        fi
      id: os-cache
      shell: sh
    - uses: teaxyz/setup@v0
      id: tea
      with:
        prefix: ${{ inputs.prefix }}
        version: ${{ inputs.version }}
        chaste: ${{ inputs.chaste }}
        +: ${{ inputs.packages }} tea.xyz/brewkit
        srcroot: ${{ inputs.srcroot }}
    - run: cp ${{ steps.tea.outputs.prefix }}/tea.xyz/brewkit/v\*/deno.jsonc ./hashInput
      shell: sh
    - uses: actions/cache@v3
      with:
        path: |
          ~/.deno
          ${{ steps.os-cache.outputs.cache }}
        key: ${{ runner.os }}-deno-${{ inputs.cache-prefix }}-${{ hashFiles('hashInput') }}
